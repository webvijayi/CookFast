// Generated by AI Assistant - Add Header component with updated theme toggle positioning
// Path: src/components/layout/Header.tsx
import React from 'react';
import Link from 'next/link';
import ThemeToggle from '@/components/ThemeToggle'; // Assuming ThemeToggle is moved or adapted

// Logo component with emojis
const Logo = () => (
  <Link href="/" className="flex items-center gap-2 text-size-2 font-semibold text-foreground hover:text-primary transition-colors">
    <span className="flex text-2xl">
      <span className="mr-1">üç≥</span>
      <span>üöÄ</span>
    </span>
    <span className="text-xl font-bold">CookFast</span>
  </Link>
);

// Navigation items
const navItems = [
  { name: 'Doc Types', href: '#document-types' },
  { name: 'Features', href: '#features' },
  { name: 'How It Works', href: '#how-it-works' },
  { name: 'Generate', href: '#generate' },
  { name: 'FAQ', href: '#faq' },
];

const Header = () => {
  const [mobileMenuOpen, setMobileMenuOpen] = React.useState(false);

  const handleLinkClick = (e: React.MouseEvent<HTMLAnchorElement>, href: string) => {
    e.preventDefault();
    const targetId = href.substring(1);
    const element = document.getElementById(targetId);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth' });
      setMobileMenuOpen(false);
    }
  };

  return (
    <header className="sticky top-0 z-50 w-full border-b border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
      <div className="container flex h-16 max-w-screen-2xl items-center justify-between px-4 md:px-6 lg:px-8">
        <div className="flex items-center">
          <Logo />
        </div>
        
        {/* Desktop Navigation */}
        <nav className="hidden md:flex items-center space-x-6 ml-auto mr-4">
          {navItems.map((item) => (
            <Link
              key={item.name}
              href={item.href}
              onClick={(e) => handleLinkClick(e, item.href)}
              className="text-md font-medium transition-colors text-foreground/80 hover:text-primary"
            >
              {item.name}
            </Link>
          ))}
          <ThemeToggle />
        </nav>
        
        {/* Mobile Menu Button and Theme Toggle */}
        <div className="flex md:hidden items-center">
          <ThemeToggle />
          <button
            type="button"
            className="ml-4 inline-flex items-center justify-center rounded-md p-2.5 text-foreground"
            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
          >
            <span className="sr-only">Open main menu</span>
            {mobileMenuOpen ? (
              <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" strokeWidth="1.5" stroke="currentColor" aria-hidden="true">
                <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
              </svg>
            ) : (
              <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" strokeWidth="1.5" stroke="currentColor" aria-hidden="true">
                <path strokeLinecap="round" strokeLinejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
              </svg>
            )}
          </button>
        </div>
      </div>
      
      {/* Mobile menu, show/hide based on menu state */}
      {mobileMenuOpen && (
        <div className="md:hidden">
          <div className="space-y-1 px-4 py-6 sm:px-6 border-t border-border/40">
            {navItems.map((item) => (
              <Link
                key={item.name}
                href={item.href}
                className="block py-2 text-base font-medium text-foreground hover:text-primary"
                onClick={(e) => handleLinkClick(e, item.href)}
              >
                {item.name}
              </Link>
            ))}
          </div>
        </div>
      )}
    </header>
  );
};

export default Header; 