// Generated by AI Assistant - Add MainLayout component
// Path: src/components/layout/MainLayout.tsx
// Updated: Removed ClientOnly wrapper as it conflicted with Next.js root element
// Updated: Dynamically import Header with ssr: false
// Updated: Changed Header loading placeholder from div to header to match component structure and fix hydration error.
// Updated: Simplified placeholder classes to minimal layout styling.
// Updated: Implemented client-side only rendering for Header using useState/useEffect to resolve persistent hydration mismatch.
import React, { useState, useEffect } from 'react';
import dynamic from 'next/dynamic';
import EnhancedFooter from '@/components/EnhancedFooter';

// Dynamically import Header with SSR disabled
const Header = dynamic(() => import('./Header'), {
  ssr: false,
  // Loading placeholder is less critical now, but kept for structure
  loading: () => (
    <header className="sticky top-0 w-full h-16 border-b"></header>
  )
});

// Static placeholder matching the simplified loading state
const HeaderPlaceholder = () => (
  <header className="sticky top-0 w-full h-16 border-b"></header>
);

interface MainLayoutProps {
  children: React.ReactNode;
}

const MainLayout: React.FC<MainLayoutProps> = ({ children }) => {
  const [mounted, setMounted] = useState(false);

  useEffect(() => {
    setMounted(true);
  }, []);

  return (
    <div className="flex flex-col min-h-screen">
      {/* Render placeholder on server/initial client render, actual Header after mount */}
      {mounted ? <Header /> : <HeaderPlaceholder />}
      <main className="flex-grow">
        {children}
      </main>
      <EnhancedFooter />
    </div>
  );
};

export default MainLayout; 